
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
define(['exports', 'react'], (function (exports, react) { 'use strict';

    let options;
    let input_select;
    function CSelect(props) {
        options = props;
        console.log('CSelect-------');
        var el = react.createElement("div", { className: "css_DropdownListWithAttribute_container" },
            react.createElement("div", { className: "css_DropdownListWithAttribute" },
                react.createElement("input", { tabIndex: props.tabIndex, id: props.id, onChange: onInputChange, className: "css_input_select", onFocus: onInput_SelectList, readOnly: !props.Can_Search })),
            create_List(props.Options.items));
        return el;
    }
    let pre_val_input;
    function onInputChange() {
        if (!input_select) {
            input_select = document.getElementById(options.id);
        }
        if (!input_select) {
            return;
        }
        let ipt = input_select;
        let val_input = ipt.value?.trim();
        if (!val_input || val_input == pre_val_input) {
            return;
        }
        pre_val_input = val_input;
        options.BindAttr.setTextValue(val_input);
    }
    let showList = false;
    function onInput_SelectList() {
        if (!input_select) {
            input_select = document.getElementById(options.id);
        }
        if (!input_select) {
            return;
        }
        let parnt_ipt = input_select.parentElement;
        let c_cssName = 'r-180';
        if (showList) {
            parnt_ipt?.classList.remove(c_cssName);
        }
        else {
            parnt_ipt?.classList.add(c_cssName);
        }
        showList = !showList;
    }
    function create_List(datas) {
        let list = [];
        datas?.forEach(element => {
            list.push(react.createElement("li", { onClick: () => {
                    onSelectLi(element);
                }, key: options.Op_Key.get(element).value?.toString() }, options.Op_Label.get(element).value));
        });
        return react.createElement("ul", { className: "css_DropdownListWithAttribute_list" }, list);
    }
    function onSelectLi(el) {
        if (!input_select) {
            return;
        }
        options.BindAttr.setTextValue(options.Op_Key.get(el).value?.toString() ?? "");
        input_select.value = options.Op_Label.get(el).value?.toString() ?? "";
        onInput_SelectList();
    }

    function DropdownListWithAttribute(props) {
        return react.createElement(CSelect, { ...props });
    }

    exports.DropdownListWithAttribute = DropdownListWithAttribute;

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQ1NlbGVjdC50c3giLCIuLi8uLi8uLi8uLi8uLi9zcmMvRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3RFbGVtZW50LCBjcmVhdGVFbGVtZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBEcm9wZG93bkxpc3RXaXRoQXR0cmlidXRlQ29udGFpbmVyUHJvcHMgfSBmcm9tIFwiLi4vLi4vdHlwaW5ncy9Ecm9wZG93bkxpc3RXaXRoQXR0cmlidXRlUHJvcHNcIjtcblxubGV0IG9wdGlvbnM6IERyb3Bkb3duTGlzdFdpdGhBdHRyaWJ1dGVDb250YWluZXJQcm9wcztcbmxldCBpbnB1dF9zZWxlY3Q6IEhUTUxJbnB1dEVsZW1lbnQgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIENTZWxlY3QocHJvcHM6IERyb3Bkb3duTGlzdFdpdGhBdHRyaWJ1dGVDb250YWluZXJQcm9wcyk6IFJlYWN0RWxlbWVudCB7XG4gICAgb3B0aW9ucyA9IHByb3BzO1xuICAgIGNvbnNvbGUubG9nKCdDU2VsZWN0LS0tLS0tLScpXG5cbiAgICB2YXIgZWwgPSA8ZGl2IGNsYXNzTmFtZT1cImNzc19Ecm9wZG93bkxpc3RXaXRoQXR0cmlidXRlX2NvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNzc19Ecm9wZG93bkxpc3RXaXRoQXR0cmlidXRlXCI+XG4gICAgICAgICAgICA8aW5wdXQgdGFiSW5kZXg9e3Byb3BzLnRhYkluZGV4fSBpZD17cHJvcHMuaWR9IG9uQ2hhbmdlPXtvbklucHV0Q2hhbmdlfSBjbGFzc05hbWU9XCJjc3NfaW5wdXRfc2VsZWN0XCIgb25Gb2N1cz17b25JbnB1dF9TZWxlY3RMaXN0fSByZWFkT25seT17IXByb3BzLkNhbl9TZWFyY2h9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7Y3JlYXRlX0xpc3QocHJvcHMuT3B0aW9ucy5pdGVtcyl9XG4gICAgPC9kaXY+XG4gICAgICAgIDtcbiAgICByZXR1cm4gZWw7XG59XG5cblxubGV0IHByZV92YWxfaW5wdXQ6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBvbklucHV0Q2hhbmdlKCkge1xuICAgIGlmICghaW5wdXRfc2VsZWN0KSB7XG4gICAgICAgIGlucHV0X3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG9wdGlvbnMuaWQpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgaWYgKCFpbnB1dF9zZWxlY3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgaXB0ID0gaW5wdXRfc2VsZWN0O1xuXG4gICAgbGV0IHZhbF9pbnB1dCA9IGlwdC52YWx1ZT8udHJpbSgpO1xuICAgIGlmICghdmFsX2lucHV0IHx8IHZhbF9pbnB1dCA9PSBwcmVfdmFsX2lucHV0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcHJlX3ZhbF9pbnB1dCA9IHZhbF9pbnB1dDtcbiAgICBvcHRpb25zLkJpbmRBdHRyLnNldFRleHRWYWx1ZSh2YWxfaW5wdXQpO1xuXG5cbn1cblxubGV0IHNob3dMaXN0ID0gZmFsc2U7XG5leHBvcnQgZnVuY3Rpb24gb25JbnB1dF9TZWxlY3RMaXN0KCkge1xuXG4gICAgaWYgKCFpbnB1dF9zZWxlY3QpIHtcbiAgICAgICAgaW5wdXRfc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3B0aW9ucy5pZCkgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICB9XG5cbiAgICBpZiAoIWlucHV0X3NlbGVjdCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBwYXJudF9pcHQgPSBpbnB1dF9zZWxlY3QucGFyZW50RWxlbWVudDtcbiAgICBsZXQgY19jc3NOYW1lID0gJ3ItMTgwJztcblxuICAgIGlmIChzaG93TGlzdCkge1xuICAgICAgICBwYXJudF9pcHQ/LmNsYXNzTGlzdC5yZW1vdmUoY19jc3NOYW1lKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcm50X2lwdD8uY2xhc3NMaXN0LmFkZChjX2Nzc05hbWUpO1xuICAgIH1cbiAgICBzaG93TGlzdCA9ICFzaG93TGlzdDtcblxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVfTGlzdChkYXRhczogYW55W10gfCB1bmRlZmluZWQpOiBSZWFjdEVsZW1lbnQge1xuICAgIGxldCBsaXN0OiBhbnkgPSBbXTtcbiAgICBkYXRhcz8uZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgbGlzdC5wdXNoKDxsaSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBvblNlbGVjdExpKGVsZW1lbnQpXG4gICAgICAgIH19IGtleT17b3B0aW9ucy5PcF9LZXkuZ2V0KGVsZW1lbnQpLnZhbHVlPy50b1N0cmluZygpfT57b3B0aW9ucy5PcF9MYWJlbC5nZXQoZWxlbWVudCkudmFsdWV9PC9saT4pXG4gICAgfSk7XG4gICAgcmV0dXJuIDx1bCBjbGFzc05hbWU9XCJjc3NfRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZV9saXN0XCI+e2xpc3R9PC91bD47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvblNlbGVjdExpKGVsOiBhbnkpIHtcblxuICAgIGlmICghaW5wdXRfc2VsZWN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgb3B0aW9ucy5CaW5kQXR0ci5zZXRUZXh0VmFsdWUob3B0aW9ucy5PcF9LZXkuZ2V0KGVsKS52YWx1ZT8udG9TdHJpbmcoKSA/PyBcIlwiKVxuICAgIGlucHV0X3NlbGVjdC52YWx1ZSA9IG9wdGlvbnMuT3BfTGFiZWwuZ2V0KGVsKS52YWx1ZT8udG9TdHJpbmcoKSA/PyBcIlwiO1xuICAgIG9uSW5wdXRfU2VsZWN0TGlzdCgpO1xuXG59IiwiaW1wb3J0IHsgUmVhY3RFbGVtZW50LCBjcmVhdGVFbGVtZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDU2VsZWN0IH0gZnJvbSBcIi4vY29tcG9uZW50cy9DU2VsZWN0XCJcblxuaW1wb3J0IHsgRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZUNvbnRhaW5lclByb3BzIH0gZnJvbSBcIi4uL3R5cGluZ3MvRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZVByb3BzXCI7XG5cbmltcG9ydCBcIi4vdWkvRHJvcGRvd25MaXN0V2l0aEF0dHJpYnV0ZS5jc3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIERyb3Bkb3duTGlzdFdpdGhBdHRyaWJ1dGUocHJvcHM6IERyb3Bkb3duTGlzdFdpdGhBdHRyaWJ1dGVDb250YWluZXJQcm9wcyk6IFJlYWN0RWxlbWVudCB7XG4gICAgcmV0dXJuIDxDU2VsZWN0IHsuLi5wcm9wc30gLz47XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlRWxlbWVudCJdLCJtYXBwaW5ncyI6Ijs7OztJQUdBLElBQUksT0FBZ0QsQ0FBQztJQUNyRCxJQUFJLFlBQXFDLENBQUM7SUFDcEMsU0FBVSxPQUFPLENBQUMsS0FBOEMsRUFBQTtRQUNsRSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ2hCLElBQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0lBRTdCLElBQUEsSUFBSSxFQUFFLEdBQUdBLG1CQUFLLENBQUEsS0FBQSxFQUFBLEVBQUEsU0FBUyxFQUFDLHlDQUF5QyxFQUFBO1lBQzdEQSxtQkFBSyxDQUFBLEtBQUEsRUFBQSxFQUFBLFNBQVMsRUFBQywrQkFBK0IsRUFBQTtJQUMxQyxZQUFBQSxtQkFBQSxDQUFBLE9BQUEsRUFBQSxFQUFPLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFDLGtCQUFrQixFQUFDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFJLENBQy9KO1lBQ0wsV0FBVyxDQUFDLEtB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
